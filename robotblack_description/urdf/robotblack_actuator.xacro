<?xml version="1.0"?>
<robot name="robotblack_actuator" xmlns:xacro="http://ros.org/wiki/xacro">

    <!--include-->
    <xacro:include filename="$(find robotblack_description)/urdf/robotblack_property.xacro" />

    <!--lidar-->
    <link name="sensor_laser">
        <inertial>
            <origin rpy="0 0 0"/>
            <mass value = "${laser_mass}"/>
            <inertia ixx="1e-6" 
                ixy="0" 
                ixz="0" 
                iyy="1e-6" 
                iyz="0" 
                izz="1e-6" />
        </inertial>
        <visual>
            <geometry>
                <mesh filename="package://robotblack_description/urdf/meshes/rplidar_a2.STL"/>
            </geometry>
            <xacro:insert_block name="material_light_grey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://robotblack_description/urdf/meshes/rplidar_a2.STL"/>
            </geometry>
        </collision>
    </link>
    <joint name="sensor_joint" type="fixed">
        <origin xyz="0 0 0.101" rpy="0 0 0"/>
        <parent link="Box"/>
        <child link="sensor_laser"/>
    </joint>

    <!-- Gazebo_hokuyo -->
    <gazebo reference="sensor_laser">
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
        <sensor type="ray" name="chassis_hokuyo_sensor">
            <pose>0.4 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>40</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>  
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.15</min>
                        <max>10.0</max>
                        <resolution>0.001</resolution>
                    </range>
                </ray>
                    <plugin name="gazebo_ros_head_hokuyo_controller" 
                        filename="libgazebo_ros_laser.so">
                        <topicName>/scan</topicName>
                        <frameName>sensor_laser</frameName>
                    </plugin>
        </sensor>
    </gazebo>  

    <!--camera-->
    <link name="camera_link">
        <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}"/>
            </geometry>
        </collision>

        <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}"/>
            </geometry>
            <xacro:insert_block name="material_light_grey"/>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>
    <joint name="camera_joint" type="fixed">
        <origin xyz="0.2 0 0" rpy="0 0 0"/>
        <parent link="Box"/>
        <child link="camera_link"/>
    </joint>
    <!-- camera in gazebo-->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
            </image>
            <clip>
            <near>0.02</near>
            <far>300</far>
            </clip>
            <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
            </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>robotblack/camera1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>

    <!--IMU-->
    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>base_footprint</bodyName>
            <topicName>imu</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>20.0</updateRate>
        </plugin>
    </gazebo>

  
</robot>